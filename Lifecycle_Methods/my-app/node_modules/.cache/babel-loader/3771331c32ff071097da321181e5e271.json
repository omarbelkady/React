{"ast":null,"code":"var _jsxFileName = \"/data/data/com.termux/files/home/React/FormsPII/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Clover from './Clover';\nimport AddClover from './AddClover';\n/*StateLess Components Info:\n *a) Also Called UI Components\n *b) Receive their data from Props and they pass the down to UI Components  as properties\n *c) Only are concerned With the UI\n *d) UI Components do not have state of their own\n *e) We use functions to create these UI Components as opposed to classes\n * */\n\n/*Theory In Practice\n *The Root Components is always at the top of the hierarchy which in our case in App.js and is the container\n *The Root Components go fetch its data from a DB via a lifecycle hook and then stores it in the State\n * Then the data is passed as a property to the UI Component/Functional Component\n * The Clover get its data from Props(App.js) container component. The Clover doesnt need sate\n * It is also possible to nest containers within Containers that is absolutely fine\n * */\n\n/*2 Types of Components: Containers(have state) and UI Components(do not have state)\n *\n * */\n\n/*This file App.js is called my root component*/\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clover: [{\n        name: \"Pintos Lover\",\n        major: \"C Architecture\",\n        favLang: \"Pascal\",\n        id: 1\n      }, {\n        name: \"Assembly Enthusiast\",\n        major: \"TSwift\",\n        favLang: \"Assembly\",\n        id: 2\n      }, {\n        name: \"Compilers  Lover\",\n        major: \"CS With A Focus in SWE\",\n        favLang: \"Machine Code\",\n        id: 3\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    }, \"My First React App\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    }, \"Learn to love 746867 like 63526\"), /*#__PURE__*/React.createElement(Clover, {\n      clover: this.state.clover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(AddClover, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/data/data/com.termux/files/home/React/FormsPII/my-app/src/App.js"],"names":["React","Component","Clover","AddClover","App","state","clover","name","major","favLang","id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA;;;;;;;;AAQA;;;;;;;;AAQA;;;;AAMA;;AACA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACPC,MAAAA,MAAM,EAAE,CACP;AAACC,QAAAA,IAAI,EAAE,cAAP;AAAuBC,QAAAA,KAAK,EAAE,gBAA9B;AAAgDC,QAAAA,OAAO,EAAE,QAAzD;AAAmEC,QAAAA,EAAE,EAAE;AAAvE,OADO,EAEP;AAACH,QAAAA,IAAI,EAAE,qBAAP;AAA8BC,QAAAA,KAAK,EAAE,QAArC;AAA+CC,QAAAA,OAAO,EAAE,UAAxD;AAAoEC,QAAAA,EAAE,EAAE;AAAxE,OAFO,EAGP;AAACH,QAAAA,IAAI,EAAE,kBAAP;AAA2BC,QAAAA,KAAK,EAAE,wBAAlC;AAA4DC,QAAAA,OAAO,EAAE,cAArE;AAAqFC,QAAAA,EAAE,EAAC;AAAxF,OAHO;AADD,KADmB;AAAA;;AAQ3BC,EAAAA,MAAM,GAAE;AACP,wBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADR,eAEY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFZ,eAGC,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAI,KAAKN,KAAL,CAAWC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,eAIC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJD,CADD;AAQA;;AAjB0B;;AAoB5B,eAAeF,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport Clover from './Clover';\nimport AddClover from './AddClover';\n\n/*StateLess Components Info:\n *a) Also Called UI Components\n *b) Receive their data from Props and they pass the down to UI Components  as properties\n *c) Only are concerned With the UI\n *d) UI Components do not have state of their own\n *e) We use functions to create these UI Components as opposed to classes\n * */\n\n/*Theory In Practice\n *The Root Components is always at the top of the hierarchy which in our case in App.js and is the container\n *The Root Components go fetch its data from a DB via a lifecycle hook and then stores it in the State\n * Then the data is passed as a property to the UI Component/Functional Component\n * The Clover get its data from Props(App.js) container component. The Clover doesnt need sate\n * It is also possible to nest containers within Containers that is absolutely fine\n * */\n\n/*2 Types of Components: Containers(have state) and UI Components(do not have state)\n *\n * */\n\n\n\n/*This file App.js is called my root component*/\nclass App extends Component {\n\tstate = {\n\t\tclover: [\n\t\t\t{name: \"Pintos Lover\", major: \"C Architecture\", favLang: \"Pascal\", id: 1},\n\t\t\t{name: \"Assembly Enthusiast\", major: \"TSwift\", favLang: \"Assembly\", id: 2},\n\t\t\t{name: \"Compilers  Lover\", major: \"CS With A Focus in SWE\", favLang: \"Machine Code\", id:3},\n\t\t]\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"App\">\n        \t\t\t<h1>My First React App</h1>\n            \t\t\t<p>Learn to love 746867 like 63526</p>\n\t\t\t\t<Clover clover = {this.state.clover}/>\n\t\t\t\t<AddClover />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}